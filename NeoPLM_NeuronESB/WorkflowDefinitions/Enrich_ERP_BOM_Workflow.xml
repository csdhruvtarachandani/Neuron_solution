<?xml version="1.0"?>
<EsbWorkflowDefinition xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>55e6bab0-2681-4e93-aedf-347dff5fb9f7</Id>
  <Version>abce0fc4-cb98-45e1-b683-181e9d401795</Version>
  <BusinessFlows />
  <Description />
  <Name>Enrich_ERP_BOM_Workflow</Name>
  <IsSystemObject>false</IsSystemObject>
  <IsPrivate>false</IsPrivate>
  <Category>General</Category>
  <Path>Main Workflows</Path>
  <ReferencedAssemblies />
  <WorkflowType>BasicWorkflow</WorkflowType>
  <WorkflowXaml>&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Activity x:Class="Enrich_ERP_BOM_Workflow" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:ne="clr-namespace:Neuron.Esb;assembly=Neuron.Esb" xmlns:nea="clr-namespace:Neuron.Esb.Administration;assembly=Neuron.Esb" xmlns:nea1="clr-namespace:Neuron.Esb.Activities;assembly=Neuron.Esb.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:snh="clr-namespace:System.Net.Http;assembly=System.Net.Http" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;
  &lt;x:Members&gt;
    &lt;x:Property Name="message" Type="InArgument(ne:ESBMessage)" /&gt;
    &lt;x:Property Name="configuration" Type="InArgument(nea:ESBConfiguration)" /&gt;
    &lt;x:Property Name="environmentVariables" Type="InArgument(scg:IReadOnlyDictionary(x:String, x:String))" /&gt;
  &lt;/x:Members&gt;
  &lt;sap:VirtualizedContainerService.HintSize&gt;822.4,7191.2&lt;/sap:VirtualizedContainerService.HintSize&gt;
  &lt;sap2010:WorkflowViewState.IdRef&gt;Enrich_ERP_MatieralLot_Workflow_1&lt;/sap2010:WorkflowViewState.IdRef&gt;
  &lt;mva:VisualBasic.Settings&gt;Assembly references and imported namespaces for internal implementation&lt;/mva:VisualBasic.Settings&gt;
  &lt;TextExpression.NamespacesForImplementation&gt;
    &lt;sco:Collection x:TypeArguments="x:String"&gt;
      &lt;x:String&gt;System.Activities&lt;/x:String&gt;
      &lt;x:String&gt;System.Activities.Statements&lt;/x:String&gt;
      &lt;x:String&gt;System.Activities.Expressions&lt;/x:String&gt;
      &lt;x:String&gt;System.Activities.Validation&lt;/x:String&gt;
      &lt;x:String&gt;System.Activities.XamlIntegration&lt;/x:String&gt;
      &lt;x:String&gt;Microsoft.VisualBasic.Activities&lt;/x:String&gt;
      &lt;x:String&gt;Neuron.Esb&lt;/x:String&gt;
      &lt;x:String&gt;Neuron.Esb.Administration&lt;/x:String&gt;
      &lt;x:String&gt;Neuron.Esb.Activities&lt;/x:String&gt;
      &lt;x:String&gt;System&lt;/x:String&gt;
      &lt;x:String&gt;System.Collections.Generic&lt;/x:String&gt;
      &lt;x:String&gt;System.Net.Http&lt;/x:String&gt;
      &lt;x:String&gt;System.Windows.Markup&lt;/x:String&gt;
    &lt;/sco:Collection&gt;
  &lt;/TextExpression.NamespacesForImplementation&gt;
  &lt;TextExpression.ReferencesForImplementation&gt;
    &lt;sco:Collection x:TypeArguments="AssemblyReference"&gt;
      &lt;AssemblyReference&gt;System.Activities&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;Neuron.Esb&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;Neuron.Esb.Activities&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;mscorlib&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;System&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;System.Net.Http&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;PresentationCore&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;WindowsBase&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;PresentationFramework&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;System.Xaml&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;System.Memory&lt;/AssemblyReference&gt;
      &lt;AssemblyReference&gt;System.Runtime.WindowsRuntime&lt;/AssemblyReference&gt;
    &lt;/sco:Collection&gt;
  &lt;/TextExpression.ReferencesForImplementation&gt;
  &lt;sap:WorkflowViewStateService.ViewState&gt;
    &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
      &lt;x:Boolean x:Key="ShouldCollapseAll"&gt;True&lt;/x:Boolean&gt;
    &lt;/scg:Dictionary&gt;
  &lt;/sap:WorkflowViewStateService.ViewState&gt;
  &lt;Sequence DisplayName="BOMRoot" sap:VirtualizedContainerService.HintSize="782.4,6831.2" sap2010:WorkflowViewState.IdRef="Sequence_1"&gt;
    &lt;Sequence.Variables&gt;
      &lt;Variable x:TypeArguments="ne:ESBMessage" Name="OriginalMessage" /&gt;
      &lt;Variable x:TypeArguments="ne:ESBMessage" Name="result" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="LocalServiceURI" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="SoapAction" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="ProcessTitle" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="SourceSystemID" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="TransactionID" /&gt;
      &lt;Variable x:TypeArguments="ne:ESBMessage" Name="BOMItemMessage" /&gt;
      &lt;Variable x:TypeArguments="s:Guid" Name="WorkflowInstanceId" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="WorkflowEndpointId" /&gt;
      &lt;Variable x:TypeArguments="x:Boolean" Default="False" Name="HasPendingItems" /&gt;
      &lt;Variable x:TypeArguments="x:String" Default="workflow" Name="propertyPrefix" /&gt;
      &lt;Variable x:TypeArguments="s:DateTime" Name="LastErrorCheckTime" /&gt;
      &lt;Variable x:TypeArguments="x:String" Name="FilePath" /&gt;
    &lt;/Sequence.Variables&gt;
    &lt;sap:WorkflowViewStateService.ViewState&gt;
      &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
        &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
      &lt;/scg:Dictionary&gt;
    &lt;/sap:WorkflowViewStateService.ViewState&gt;
    &lt;nea1:GetWorkflowInstanceId sap:VirtualizedContainerService.HintSize="760,22.4" sap2010:WorkflowViewState.IdRef="GetWorkflowInstanceId_1" Result="[WorkflowInstanceId]" /&gt;
    &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="Set Workflow Information" sap:VirtualizedContainerService.HintSize="760,36.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_5" SourceCode="string workFlowEndpoint = message.Header.WorkflowEndpointName;&amp;#xD;&amp;#xA;WorkflowEndpointId = String.Empty;&amp;#xD;&amp;#xA;if(!String.IsNullOrEmpty(workFlowEndpoint)) {&amp;#xD;&amp;#xA;&amp;#x9;WorkflowEndpointId = configuration.WorkflowHosts[workFlowEndpoint].Id;&amp;#xD;&amp;#xA;}&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;FilePath = message.GetProperty(&amp;quot;FP&amp;quot;,&amp;quot;FilePath&amp;quot;);"&gt;
      &lt;sap:WorkflowViewStateService.ViewState&gt;
        &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
          &lt;x:Boolean x:Key="IsExpanded"&gt;False&lt;/x:Boolean&gt;
          &lt;x:Boolean x:Key="IsPinned"&gt;False&lt;/x:Boolean&gt;
        &lt;/scg:Dictionary&gt;
      &lt;/sap:WorkflowViewStateService.ViewState&gt;
    &lt;/nea1:CSharpCodeActivity&gt;
    &lt;Sequence DisplayName="ERPBOM_Parent" sap:VirtualizedContainerService.HintSize="760,6567.2" sap2010:WorkflowViewState.IdRef="Sequence_2"&gt;
      &lt;Sequence.Variables&gt;
        &lt;Variable x:TypeArguments="ne:ESBMessage" Name="CurrentBOMItemMessage" /&gt;
        &lt;Variable x:TypeArguments="x:Boolean" Name="RetryAfterUserAction" /&gt;
        &lt;Variable x:TypeArguments="x:String" Name="PlantID" /&gt;
        &lt;Variable x:TypeArguments="ne:ESBMessage" Name="CurrentMessage" /&gt;
        &lt;Variable x:TypeArguments="scg:List(ne:ESBMessage)" Name="RetryBOMItems" /&gt;
      &lt;/Sequence.Variables&gt;
      &lt;sap:WorkflowViewStateService.ViewState&gt;
        &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
          &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
          &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
        &lt;/scg:Dictionary&gt;
      &lt;/sap:WorkflowViewStateService.ViewState&gt;
      &lt;nea1:CloneMessage sap:VirtualizedContainerService.HintSize="737.6,36.8" sap2010:WorkflowViewState.IdRef="CloneMessage_5" Message="[message]" PreserveMessageID="True" Result="[CurrentMessage]"&gt;
        &lt;sap:WorkflowViewStateService.ViewState&gt;
          &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
            &lt;x:Boolean x:Key="IsExpanded"&gt;False&lt;/x:Boolean&gt;
            &lt;x:Boolean x:Key="IsPinned"&gt;False&lt;/x:Boolean&gt;
          &lt;/scg:Dictionary&gt;
        &lt;/sap:WorkflowViewStateService.ViewState&gt;
      &lt;/nea1:CloneMessage&gt;
      &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="Init Transaction" sap:VirtualizedContainerService.HintSize="737.6,36.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_1" SourceCode="ProcessTitle = &amp;quot;ERP BOM Enrichment&amp;quot;;&amp;#xD;&amp;#xA;LocalServiceURI = String.Empty;&amp;#xD;&amp;#xA;SoapAction = String.Empty;&amp;#xD;&amp;#xA;PlantID = String.Empty;&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;if(CurrentMessage.Header.Action != null &amp;amp;&amp;amp; CurrentMessage.Header.Action.Length &amp;gt; 0) { SoapAction = CurrentMessage.Header.Action; }&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;//Load the Source System ID and Transaction ID &amp;#xD;&amp;#xA;SourceSystemID = CurrentMessage.ToXmlDocument().SelectSingleNode(&amp;quot;/*[local-name()='NeoPlmBillOfMaterial']/*[local-name()='SourceSystemID']&amp;quot;).InnerText;&amp;#xD;&amp;#xA;TransactionID = CurrentMessage.ToXmlDocument().SelectSingleNode(&amp;quot;/*[local-name()='NeoPlmBillOfMaterial']/*[local-name()='TransactionID']&amp;quot;).InnerText;&amp;#xD;&amp;#xA;//PlantID = CurrentMessage.ToXmlDocument().SelectSingleNode(&amp;quot;/*[local-name()='NeoPlmBillOfMaterial']/*[local-name()='PlantID']&amp;quot;).InnerText;&amp;#xD;&amp;#xA;//Set retry item message which need seperate handing.&amp;#xD;&amp;#xA;RetryBOMItems = new List&amp;lt;Neuron.Esb.ESBMessage&amp;gt;();&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;CurrentMessage.SetProperty(&amp;quot;workflow&amp;quot;,&amp;quot;ProcessTitle&amp;quot;,ProcessTitle);"&gt;
        &lt;sap:WorkflowViewStateService.ViewState&gt;
          &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
            &lt;x:Boolean x:Key="IsExpanded"&gt;False&lt;/x:Boolean&gt;
            &lt;x:Boolean x:Key="IsPinned"&gt;False&lt;/x:Boolean&gt;
          &lt;/scg:Dictionary&gt;
        &lt;/sap:WorkflowViewStateService.ViewState&gt;
      &lt;/nea1:CSharpCodeActivity&gt;
      &lt;Sequence DisplayName="BOMItemSequence" sap:VirtualizedContainerService.HintSize="737.6,1576.8" sap2010:WorkflowViewState.IdRef="Sequence_3"&gt;
        &lt;sap:WorkflowViewStateService.ViewState&gt;
          &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
            &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
            &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
          &lt;/scg:Dictionary&gt;
        &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="BOMItemInit" sap:VirtualizedContainerService.HintSize="614.4,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_2" SourceCode="//Set the inital properties to call appropriate process in retry loop&amp;#xD;&amp;#xA;//PlantID = item.GetProperty(propertyPrefix, &amp;quot;PlantID&amp;quot;);&amp;#xD;&amp;#xA;PlantID = CurrentMessage.ToXmlDocument().SelectSingleNode(&amp;quot;/*[local-name()='NeoPlmBillOfMaterial']/*[local-name()='BillOfMaterial']/*[local-name()='PlantID']&amp;quot;).InnerText;&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;List&amp;lt;Neuron.NameValuePair&amp;gt; customProperties = new List&amp;lt;Neuron.NameValuePair&amp;gt;();&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;LocalServiceURI&amp;quot;, LocalServiceURI));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;SoapAction&amp;quot;, SoapAction));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ProcessTitle&amp;quot;, ProcessTitle));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;SourceSystemID&amp;quot;, SourceSystemID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;TransactionID&amp;quot;, TransactionID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;PlantID&amp;quot;, PlantID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;WorkflowInstanceId&amp;quot;, WorkflowInstanceId.ToString()));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;WorkflowEndpointId&amp;quot;, WorkflowEndpointId));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ChildWorkflow&amp;quot;, &amp;quot;False&amp;quot;));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;FilePath&amp;quot;, FilePath));&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;CurrentMessage.SetProperties(propertyPrefix, customProperties);"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;/nea1:CSharpCodeActivity&gt;
        &lt;nea1:PersistAndReload DisplayName="PersistBOMItemMessage" sap:VirtualizedContainerService.HintSize="614.4,22.4" sap2010:WorkflowViewState.IdRef="PersistAndReload_1" /&gt;
        &lt;nea1:CloneMessage sap:VirtualizedContainerService.HintSize="614.4,102.4" sap2010:WorkflowViewState.IdRef="CloneMessage_4" Message="[CurrentMessage]" PreserveMessageID="True" Result="[CurrentBOMItemMessage]"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;/nea1:CloneMessage&gt;
        &lt;nea1:ExecuteProcess CancelObject="{x:Null}" EnvironmentVariables="[environmentVariables]" sap:VirtualizedContainerService.HintSize="614.4,133.6" sap2010:WorkflowViewState.IdRef="ExecuteProcess_1" Message="[CurrentBOMItemMessage]" Process="Process_ERP_BOM_Enrichment_Item" Result="[result]"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;/nea1:ExecuteProcess&gt;
        &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="Check_RetryAfterUserAction" sap:VirtualizedContainerService.HintSize="614.4,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_4" SourceCode="//Read message response back&amp;#xD;&amp;#xA;//var localServiceUrl = result.GetProperty(propertyPrefix, &amp;quot;LocalServiceURI&amp;quot;);&amp;#xD;&amp;#xA;//&amp;#x9;if(!String.IsNullOrWhiteSpace( localServiceUrl))&amp;#xD;&amp;#xA;//&amp;#x9;&amp;#x9;LocalServiceURI = localServiceUrl.ToString();&amp;#xD;&amp;#xA;&amp;#x9;&amp;#xD;&amp;#xA;&amp;#x9;RetryAfterUserAction = false;&amp;#xD;&amp;#xA;&amp;#x9;bool itemError = false;&amp;#xD;&amp;#xA;&amp;#x9;if(bool.TryParse(result.GetProperty(propertyPrefix, &amp;quot;RetryAfterUserAction&amp;quot;), out itemError))&amp;#xD;&amp;#xA;&amp;#x9;{&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;RetryAfterUserAction = itemError;&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;if(RetryAfterUserAction) {&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;//Set root level varaible to retry message..&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;Neuron.Esb.ESBMessage retryMessage = CurrentMessage.Clone(true);&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;List&amp;lt;Neuron.NameValuePair&amp;gt; customProperties = new List&amp;lt;Neuron.NameValuePair&amp;gt;();&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorMessage&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorMessage&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;//customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorMoreInfo&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorMoreInfo&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;PlantID&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;PlantID&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorTypeID&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorTypeID&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorParameter&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorParameter&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;retryMessage.SetProperties(propertyPrefix, customProperties);&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9;RetryBOMItems.Add(retryMessage);&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;}&amp;#xD;&amp;#xA;&amp;#x9;}"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;/nea1:CSharpCodeActivity&gt;
      &lt;/Sequence&gt;
      &lt;Sequence DisplayName="RetryFailedItemsLogic" sap:VirtualizedContainerService.HintSize="737.6,4672" sap2010:WorkflowViewState.IdRef="Sequence_5"&gt;
        &lt;Sequence.Variables&gt;
          &lt;Variable x:TypeArguments="scg:List(ne:ESBMessage)" Name="RetryAgainBOMItems" /&gt;
        &lt;/Sequence.Variables&gt;
        &lt;sap:WorkflowViewStateService.ViewState&gt;
          &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
            &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
            &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
          &lt;/scg:Dictionary&gt;
        &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="CheckForError" sap:VirtualizedContainerService.HintSize="715.2,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_9" SourceCode="if (RetryBOMItems.Count &amp;gt; 0) {&amp;#xD;&amp;#xA;&amp;#x9;HasPendingItems = true;&amp;#xD;&amp;#xA;&amp;#x9;RetryAfterUserAction = true;&amp;#xD;&amp;#xA;} else {&amp;#xD;&amp;#xA;&amp;#x9;HasPendingItems = false;&amp;#xD;&amp;#xA;&amp;#x9;RetryAfterUserAction = false;&amp;#xD;&amp;#xA;}&amp;#xD;&amp;#xA;LastErrorCheckTime = DateTime.UtcNow;"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
        &lt;/nea1:CSharpCodeActivity&gt;
        &lt;While DisplayName="WhileErrorItems" sap:VirtualizedContainerService.HintSize="715.2,3990.4" sap2010:WorkflowViewState.IdRef="While_1"&gt;
          &lt;sap:WorkflowViewStateService.ViewState&gt;
            &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
              &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
            &lt;/scg:Dictionary&gt;
          &lt;/sap:WorkflowViewStateService.ViewState&gt;
          &lt;While.Condition&gt;[HasPendingItems]&lt;/While.Condition&gt;
          &lt;Sequence DisplayName="RetryErrorItems" sap:VirtualizedContainerService.HintSize="689.6,3832.8" sap2010:WorkflowViewState.IdRef="Sequence_6"&gt;
            &lt;sap:WorkflowViewStateService.ViewState&gt;
              &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
              &lt;/scg:Dictionary&gt;
            &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="CreateMessageForEmail" sap:VirtualizedContainerService.HintSize="667.2,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_14" SourceCode="//Create error message body.&amp;#xD;&amp;#xA;ESBMessage item = null;&amp;#xD;&amp;#xA;XElement rootErrorMessage = new XElement(&amp;quot;ErrorItems&amp;quot;);&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;const string errorMessageString = &amp;quot;ErrorMessage&amp;quot;;&amp;#xD;&amp;#xA;//const string errorMoreInfoString = &amp;quot;ErrorMoreInfo&amp;quot;;&amp;#xD;&amp;#xA;const string plantIDString = &amp;quot;PlantID&amp;quot;;&amp;#xD;&amp;#xA;const string errorTypeIDString = &amp;quot;ErrorTypeID&amp;quot;;&amp;#xD;&amp;#xA;const string errorItemString = &amp;quot;ErrorItem&amp;quot;;&amp;#xD;&amp;#xA;const string errorGroupString = &amp;quot;ErrorGroup&amp;quot;;&amp;#xD;&amp;#xA;const string errorParameterString = &amp;quot;ErrorParameter&amp;quot;;&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;XElement errorGroup = null;&amp;#xD;&amp;#xA;XElement errorItemElement = null;&amp;#xD;&amp;#xA;string errorMessage = null;&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;Dictionary&amp;lt;String, XElement&amp;gt; errorGroupList = new Dictionary&amp;lt;String, XElement&amp;gt;();&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;if (RetryBOMItems.Count &amp;gt; 0) {&amp;#xD;&amp;#xA;&amp;#x9;item = RetryBOMItems[0].Clone(false);&amp;#xD;&amp;#xA;&amp;#x9;foreach(var errorItem in RetryBOMItems) {&amp;#xD;&amp;#xA;        errorMessage = errorItem.GetProperty(propertyPrefix, errorMessageString);&amp;#xD;&amp;#xA;        if (errorGroupList.ContainsKey(errorMessage)) {&amp;#xD;&amp;#xA;            errorGroup = errorGroupList[errorMessage];&amp;#xD;&amp;#xA;        } else {&amp;#xD;&amp;#xA;            errorGroup = new XElement(errorGroupString, new XAttribute(errorMessageString, errorMessage),&amp;#xD;&amp;#xA;             //new XAttribute(errorMoreInfoString, errorItem.GetProperty(propertyPrefix, errorMoreInfoString)),&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9; new XAttribute(plantIDString, errorItem.GetProperty(propertyPrefix, plantIDString)),&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9; new XAttribute(errorTypeIDString, errorItem.GetProperty(propertyPrefix, errorTypeIDString)),&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;&amp;#x9; new XAttribute(errorParameterString, errorItem.GetProperty(propertyPrefix, errorParameterString))&amp;#xD;&amp;#xA;            );&amp;#xD;&amp;#xA;            rootErrorMessage.Add(errorGroup);&amp;#xD;&amp;#xA;            errorGroupList.Add(errorMessage, errorGroup);&amp;#xD;&amp;#xA;        }&amp;#xD;&amp;#xA;&amp;#x9;&amp;#x9;errorGroup.Add( new XElement(errorItemString, errorItem.ToXml()));&amp;#xD;&amp;#xA;&amp;#x9;}&amp;#xD;&amp;#xA;}&amp;#xD;&amp;#xA;item.FromXml(rootErrorMessage.ToString());&amp;#xD;&amp;#xA;BOMItemMessage = item;"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;/nea1:CSharpCodeActivity&gt;
            &lt;nea1:ExecuteProcess CancelObject="{x:Null}" EnvironmentVariables="[environmentVariables]" sap:VirtualizedContainerService.HintSize="667.2,133.6" sap2010:WorkflowViewState.IdRef="ExecuteProcess_4" Message="[BOMItemMessage]" Process="Process_ItemsErrorHanding" Result="[result]"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;/nea1:ExecuteProcess&gt;
            &lt;nea1:PersistAndReload DisplayName="Persist" sap:VirtualizedContainerService.HintSize="667.2,22.4" sap2010:WorkflowViewState.IdRef="PersistAndReload_3" /&gt;
            &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="Throw error for user action" sap:VirtualizedContainerService.HintSize="667.2,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_17" SourceCode="//LastErrorCheckTime&amp;#xD;&amp;#xA;//LastErrorCheckTime&amp;#xD;&amp;#xA;var diff = DateTime.UtcNow - LastErrorCheckTime;&amp;#xD;&amp;#xA;if ( diff.TotalSeconds &amp;lt; 60) {&amp;#xD;&amp;#xA;//case where user still need to  click the retry for workflow..&amp;#xD;&amp;#xA;&amp;#x9;throw new Exception(&amp;quot;Aborted workflow for user action!&amp;quot;);&amp;#xD;&amp;#xA;}"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;/nea1:CSharpCodeActivity&gt;
            &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="InitBeforeLoop" sap:VirtualizedContainerService.HintSize="667.2,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_11" SourceCode="RetryAgainBOMItems = new List&amp;lt;ESBMessage&amp;gt;();"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;/nea1:CSharpCodeActivity&gt;
            &lt;ForEach x:TypeArguments="ne:ESBMessage" DisplayName="ForEach&amp;lt;ESBMessage&amp;gt;" sap:VirtualizedContainerService.HintSize="667.2,1724.8" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[RetryBOMItems]"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
              &lt;ActivityAction x:TypeArguments="ne:ESBMessage"&gt;
                &lt;ActivityAction.Argument&gt;
                  &lt;DelegateInArgument x:TypeArguments="ne:ESBMessage" Name="item" /&gt;
                &lt;/ActivityAction.Argument&gt;
                &lt;Sequence DisplayName="ProcessItem" sap:VirtualizedContainerService.HintSize="636.8,1576.8" sap2010:WorkflowViewState.IdRef="Sequence_7"&gt;
                  &lt;sap:WorkflowViewStateService.ViewState&gt;
                    &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                      &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                      &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                    &lt;/scg:Dictionary&gt;
                  &lt;/sap:WorkflowViewStateService.ViewState&gt;
                  &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="Init" sap:VirtualizedContainerService.HintSize="614.4,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_10" SourceCode="//Set the inital properties to call appropriate process in retry loop&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;String prefix = propertyPrefix;&amp;#xD;&amp;#xA;List&amp;lt;Neuron.NameValuePair&amp;gt; customProperties = new List&amp;lt;Neuron.NameValuePair&amp;gt;();&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;LocalServiceURI&amp;quot;, LocalServiceURI));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;SoapAction&amp;quot;, SoapAction));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ProcessTitle&amp;quot;, ProcessTitle));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;SourceSystemID&amp;quot;, SourceSystemID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;TransactionID&amp;quot;, TransactionID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;PlantID&amp;quot;, PlantID));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;WorkflowInstanceId&amp;quot;, WorkflowInstanceId.ToString()));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;WorkflowEndpointId&amp;quot;, WorkflowEndpointId));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ChildWorkflow&amp;quot;, &amp;quot;False&amp;quot;));&amp;#xD;&amp;#xA;customProperties.Add( new Neuron.NameValuePair(&amp;quot;FilePath&amp;quot;, FilePath));&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;item.SetProperties(prefix, customProperties);"&gt;
                    &lt;sap:WorkflowViewStateService.ViewState&gt;
                      &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                        &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                        &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                      &lt;/scg:Dictionary&gt;
                    &lt;/sap:WorkflowViewStateService.ViewState&gt;
                  &lt;/nea1:CSharpCodeActivity&gt;
                  &lt;nea1:CloneMessage sap:VirtualizedContainerService.HintSize="614.4,102.4" sap2010:WorkflowViewState.IdRef="CloneMessage_7" Message="[item]" PreserveMessageID="True" Result="[CurrentBOMItemMessage]"&gt;
                    &lt;sap:WorkflowViewStateService.ViewState&gt;
                      &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                        &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                        &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                      &lt;/scg:Dictionary&gt;
                    &lt;/sap:WorkflowViewStateService.ViewState&gt;
                  &lt;/nea1:CloneMessage&gt;
                  &lt;nea1:PersistAndReload DisplayName="PersistBeforeProcess" sap:VirtualizedContainerService.HintSize="614.4,22.4" sap2010:WorkflowViewState.IdRef="PersistAndReload_4" /&gt;
                  &lt;nea1:ExecuteProcess CancelObject="{x:Null}" EnvironmentVariables="[environmentVariables]" sap:VirtualizedContainerService.HintSize="614.4,133.6" sap2010:WorkflowViewState.IdRef="ExecuteProcess_3" Message="[CurrentBOMItemMessage]" Process="Process_ERP_BOM_Enrichment_Item" Result="[result]"&gt;
                    &lt;sap:WorkflowViewStateService.ViewState&gt;
                      &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                        &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                        &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                      &lt;/scg:Dictionary&gt;
                    &lt;/sap:WorkflowViewStateService.ViewState&gt;
                  &lt;/nea1:ExecuteProcess&gt;
                  &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="CheckForError" sap:VirtualizedContainerService.HintSize="614.4,516.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_12" SourceCode="//Read message response back&amp;#xD;&amp;#xA;String prefix = propertyPrefix;&amp;#xD;&amp;#xA;bool hasItemError = false;&amp;#xD;&amp;#xA;if(bool.TryParse(result.GetProperty(prefix, &amp;quot;RetryAfterUserAction&amp;quot;), out hasItemError))&amp;#xD;&amp;#xA;{&amp;#xD;&amp;#xA;&amp;#x9;List&amp;lt;Neuron.NameValuePair&amp;gt; customProperties = new List&amp;lt;Neuron.NameValuePair&amp;gt;();&amp;#xD;&amp;#xA;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorMessage&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorMessage&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;//customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorMoreInfo&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorMoreInfo&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;PlantID&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;PlantID&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorTypeID&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorTypeID&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ErrorParameter&amp;quot;, result.GetProperty(propertyPrefix, &amp;quot;ErrorParameter&amp;quot;)));&amp;#xD;&amp;#xA;&amp;#x9;&amp;#xD;&amp;#xA;//&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;ProcessTitle&amp;quot;, ProcessTitle));&amp;#xD;&amp;#xA;//&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;SourceSystemID&amp;quot;, SourceSystemID));&amp;#xD;&amp;#xA;//&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;TransactionID&amp;quot;, TransactionID));&amp;#xD;&amp;#xA;//&amp;#x9;&amp;#x9;customProperties.Add( new Neuron.NameValuePair(&amp;quot;RetryAfterUserAction&amp;quot;, &amp;quot;True&amp;quot;));&amp;#xD;&amp;#xA;&amp;#x9;item.SetProperties(propertyPrefix, customProperties);&amp;#xD;&amp;#xA;&amp;#x9;RetryAgainBOMItems.Add(item);&amp;#xD;&amp;#xA;}"&gt;
                    &lt;sap:WorkflowViewStateService.ViewState&gt;
                      &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                        &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                        &lt;x:Boolean x:Key="IsPinned"&gt;True&lt;/x:Boolean&gt;
                      &lt;/scg:Dictionary&gt;
                    &lt;/sap:WorkflowViewStateService.ViewState&gt;
                  &lt;/nea1:CSharpCodeActivity&gt;
                &lt;/Sequence&gt;
              &lt;/ActivityAction&gt;
            &lt;/ForEach&gt;
            &lt;nea1:CSharpCodeActivity ReferencedAssemblies="{x:Array Type=x:String}" DisplayName="CheckForErrorAfterRetry" sap:VirtualizedContainerService.HintSize="667.2,36.8" sap2010:WorkflowViewState.IdRef="CSharpCodeActivity_18" SourceCode="if (RetryAgainBOMItems.Count &amp;gt; 0) {&amp;#xA;&amp;#x9;RetryBOMItems = RetryAgainBOMItems;&amp;#xA;&amp;#x9;HasPendingItems = true;&amp;#xA;&amp;#x9;RetryAfterUserAction = true;&amp;#xA;}  else {&amp;#xA;&amp;#x9;HasPendingItems = false;&amp;#xA;&amp;#x9;RetryAfterUserAction = false;&amp;#xA;}&amp;#xA;LastErrorCheckTime = DateTime.UtcNow;"&gt;
              &lt;sap:WorkflowViewStateService.ViewState&gt;
                &lt;scg:Dictionary x:TypeArguments="x:String, x:Object"&gt;
                  &lt;x:Boolean x:Key="IsExpanded"&gt;True&lt;/x:Boolean&gt;
                  &lt;x:Boolean x:Key="IsPinned"&gt;False&lt;/x:Boolean&gt;
                &lt;/scg:Dictionary&gt;
              &lt;/sap:WorkflowViewStateService.ViewState&gt;
            &lt;/nea1:CSharpCodeActivity&gt;
          &lt;/Sequence&gt;
        &lt;/While&gt;
      &lt;/Sequence&gt;
    &lt;/Sequence&gt;
  &lt;/Sequence&gt;
&lt;/Activity&gt;</WorkflowXaml>
</EsbWorkflowDefinition>